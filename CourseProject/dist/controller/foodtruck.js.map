{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","get","req","res","find","err","foodtrucks","send","json","findById","params","id","foodtruck","post","newFoodTruck","name","body","foodtype","avgcost","geometry","coordinates","save","message","delete","remove","_id","review","put","newReview","title","text","reviews","push"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport FoodTruck from '../model/foodtruck';\nimport Review from '../model/review';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\n\nimport { authenticate } from '../middleware/authMiddleware';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // '/v1/foodtruck' - GET all food trucks\n  api.get('/', authenticate, (req, res) => {\n    FoodTruck.find({}, (err, foodtrucks) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtrucks);\n    });\n  });\n\n  // '/v1/foodtruck/:id' - GET a specific food truck\n  api.get('/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtruck);\n    });\n  });\n\n  // '/v1/foodtruck/add' - POST - add a food truck\n  api.post('/add', (req, res) => {\n    let newFoodTruck = new FoodTruck();\n    newFoodTruck.name = req.body.name;\n    newFoodTruck.foodtype = req.body.foodtype;\n    newFoodTruck.avgcost = req.body.avgcost;\n    newFoodTruck.geometry.coordinates = req.body.geometry.coordinates;\n\n    newFoodTruck.save(function(err) {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ message: 'Food Truck saved successfully' });\n    });\n  });\n\n  // '/v1/foodtruck/:id' - DELETE - remove a food truck\n  api.delete('/:id', (req, res) => {\n    FoodTruck.remove({\n      _id: req.params.id\n    }, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      Review.remove({\n        foodtruck: req.params.id\n      }, (err, review) => {\n        if (err) {\n          res.send(err);\n        }\n        res.json({message: \"Food Truck and Reviews Successfully Removed\"});\n      });\n    });\n  });\n\n  // '/v1/foodtruck/:id' - PUT - update an existing record\n  api.put('/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      foodtruck.name = req.body.name;\n      foodtruck.foodtype = req.body.foodtype;\n      foodtruck.avgcost = req.body.avgcost;\n      foodtruck.geometry.coordinates = req.body.geometry.coordinates;\n      foodtruck.save(function(err) {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: 'Food Truck info updated' });\n      });\n    });\n  });\n\n  // add a review by a specific foodtruck id\n  // '/v1/foodtruck/reviews/add/:id'\n  api.post('/reviews/add/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      let newReview = new Review();\n\n      newReview.title = req.body.title;\n      newReview.text = req.body.text;\n      newReview.foodtruck = foodtruck._id;\n      newReview.save((err, review) => {\n        if (err) {\n          res.send(err);\n        }\n        foodtruck.reviews.push(newReview);\n        foodtruck.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({ message: 'Food truck review saved' });\n        });\n      });\n    });\n  });\n\n  // get reviews for a specific foodtruck id\n  // '/v1/foodtruck/reviews/:id'\n  api.get('/reviews/:id', (req, res) => {\n    Review.find({foodtruck: req.params.id}, (err, reviews) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(reviews);\n    });\n  });\n\n  return api;\n}\n"]}